"""
本项目是基于阴阳师妖怪屋的探索玩法编写的。
目的是让使用者能够快速根据拥有的式神，组合出能让增强buff最大化的8人组合。
探索玩法可派遣8位式神进行不断探索。
不同式神可组成不同羁绊，羁绊在游戏中是固定的，式神组成羁绊可获得增强buff，即额外探索奖励。

本项目使用方法，只需规范输入内容，并进行分隔，在完成输入后以N或n结尾即可。
该项目结果只会出现第一个增强buff最大的组合，请知悉。

本项目计算过程：
1.获取使用者的式神录，进行处理后获得单个式神的集合，保存至使用者变量type中。
2.根据这些式神从式神字典中找到可以组成的羁绊，保存其在字典中位置至使用者变量loc中。
3.将不同羁绊可组成的组合(后续称为羁绊组合)，占用人数，增强buff放在一个字典中，保存至使用者变量total中。
4.对total中每个可组成羁绊组合，进行对比，占用人数合规(8位)，且增强等级最大的组合保存至best中，并输出。
"""
#
import function as fu
import dictionary as dic
import shiki as sk


#将我拥有的式神设为一个空的集合,方便后续添加式神
shiki_you = sk.Shiki(set(()))


#建立一个集合包括所有羁绊组合的式神
"""
白狼,茨木童子,大天狗,独眼小僧,鬼使白,鬼使黑,蝴蝶精,九命猫,酒吞童子,傀儡师,
镰鼬,孟婆,犬神,山兔,少羽大天狗,桃花妖,天邪鬼赤,天邪鬼黄,天邪鬼绿,天邪鬼青,铁鼠,
巫蛊师,雪女,阎魔,妖刀姬,樱花妖,萤草
"""
shiki_all = dic.shiki_all


#通过使用者录入，获取使用者的式神录
while True:
    #获取使用者输入的式神
    #输入中如果有汉字或N,n以外的字符，都replace为,号，并进行分隔。当输入为N或n时，结束输入。
    shiki = input('Would you like to tell me your shiki name? please use \',\' to split.')
    #对输入内容进行处理，判断input的内容是不是为N或n，即对方有否完成输入过程。N为完成输入。
    if fu.check_go_on(shiki):
        break
    #对输入内容进行处理，保证输入内容合规后，更新至使用者的式神录
    fu.input_shiki(shiki, shiki_you)


#通过计算获得可组成的最大增强buff的羁绊组合
#可以更改组队人数设定限制，即将fu.get_max_buff(shiki_you)的默认参数n进行改动
fu.get_max_buff(shiki_you)
